import telebot
import io
import sys
import os
from telebot import types
from flask import Flask, request

TOKEN = os.environ.get("BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)
ALLOWED_USER_ID = 880913516

app = Flask(__name__)

@app.route('/')
def home():
    return "–ë–æ—Ç –º–∏–Ω–∏ –õ—é–∫—Å –æ–Ω–ª–∞–π–Ω! üõ∏"

@app.route('/' + TOKEN, methods=['POST'])
def receive_update():
    update = telebot.types.Update.de_json(request.stream.read().decode("utf-8"))
    bot.process_new_updates([update])
    return '', 200

@bot.message_handler(commands=['start'])
def start(message):
    if message.from_user.id != ALLOWED_USER_ID:
        bot.reply_to(message, "—Ç–µ–±—è —Ç—É—Ç –Ω–µ –∂–¥–∞–ª–∏. –≤—ã–π–¥–∏")
        return
        
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üöÄ –ó–∞–ø—É—Å–∫–∞–π —ç—Ç—É –ª—é—Ç—É—é –º–∞—à–∏–Ω—É")
    btn2 = types.KeyboardButton("üßä –ö–∞–∫ –¥–µ–ª–∞ –Ω–∞ —Å–µ–≤–µ—Ä–Ω–æ–º —Ñ—Ä–æ–Ω—Ç–µ?")
    markup.add(btn1, btn2)

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    if message.from_user.id != ALLOWED_USER_ID:
        bot.reply_to(message, "‚õî—Ç–µ–±—è —Ç—É—Ç –Ω–µ –∂–¥–∞–ª–∏. –≤—ã–π–¥–∏.")
        return

    if message.text == "üöÄ –ó–∞–ø—É—Å–∫–∞–π —ç—Ç—É –ª—é—Ç—É—é –º–∞—à–∏–Ω—É":
        bot.reply_to(message, "üèéÔ∏è –£—á–∏—Ç–µ–ª—å –õ—é–∫—Å –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–ø—É—Å–∫.")
        return

    elif message.text == "üßä –ö–∞–∫ –¥–µ–ª–∞ –Ω–∞ —Å–µ–≤–µ—Ä–Ω–æ–º —Ñ—Ä–æ–Ω—Ç–µ?":
        bot.reply_to(message, "‚ùÑÔ∏è –í—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º.")
        return
        
    code = message.text
    if any(x in code.lower() for x in ['import os', 'subprocess', 'open(', 'eval(', '__import__']):
        bot.reply_to(message, "–ù–æ—É-–Ω–æ—É, —Å–≤–∏—Ç–∏. –≠—Ç–æ —Å–ª–∏—à–∫–æ–º –æ–ø–∞—Å–Ω–æ.")
        return

    try:
        old_stdout = sys.stdout
        sys.stdout = io.StringIO()
        exec(code)
        output = sys.stdout.getvalue()
        sys.stdout = old_stdout
        if not output.strip():
            output = "‚úÖ –ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω, –Ω–æ —Ç–∏—Ö–æ –∫–∞–∫ —Å–µ–≤–µ—Ä–Ω—ã–π —Ñ—Ä–æ–Ω—Ç"
        bot.reply_to(message, output)
    except Exception as e:
        bot.reply_to(message, f"‚ö†Ô∏è –û—à–∏–±–∫–∞:\n{e}")

if __name__ == '__main__':
    bot.remove_webhook()
    bot.set_webhook(url=os.environ.get("RENDER_EXTERNAL_URL") + "/" + TOKEN)
    app.run(host='0.0.0.0', port=10000)
